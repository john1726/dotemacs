!include "LogicLib.nsh"

;Include Modern UI
!include "MUI2.nsh"
!include "nsDialogs.nsh"
!include "nsDialogs_createTextMultiline.nsh"
!include "StrRep.nsh"
!include "ReplaceInFile.nsh"
!include "Sections.nsh"
!include "winmessages.nsh"

!define MAJOR_VERSION "4"
!define MINOR_VERSION "5"
!define PATCH_VERSION "3"
!define BUILD_VERSION "212"
    
!define APP_COPYRIGHT "QI-Pro Â© Sound QI 2021"
!define COMPANY_NAME "Sound QI"
!define FLEX_LM "FlexLM"        
!define FLEX_DIR "FlexSQI"     
!define HW_DATA "HW-Data"
!define HW_WORKSPACE "HW-Workspaces"        
!define LANG_ENGLSH "English" 
!define PRODUCT_NAME "QI-Pro"
!define PRODUCT_VERSION "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}.${BUILD_VERSION}"
!define SETUP_NAME "QIProSetup.exe"

BrandingText "${COMPANY_NAME}"

OutFile ${SETUP_NAME}
Icon "favicon.ico"
UninstallIcon "favicon.ico"
!define MUI_ICON "favicon.ico"
!define MUI_UNICON "favicon.ico"
Name "${PRODUCT_NAME}"
    
InstallDir "$PROGRAMFILES64\${PRODUCT_NAME} v${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}\"
InstallDirRegKey HKLM "Software\$PRODUCT_NAME" ""
ShowInstDetails hide
ShowUnInstDetails hide

SetCompressor /SOLID lzma
SetCompressorDictSize 12

;Request application privileges for Windows 
RequestExecutionLevel admin

; HKLM (all users) vs HKCU (current user) defines
!define env_hklm 'HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"'
!define env_hkcu 'HKCU "Environment"'

!macro WriteSignedUninstaller Destination
!makensis '"/DGENRATINGUNINST=$%TEMP%\Uninst.exe" "${__FILE__}" "/XOutfile `$%TEMP%\tempinstaller.exe`"' = 0 ; Create fake installer
!system 'set __COMPAT_LAYER=RunAsInvoker&"$%TEMP%\tempinstaller.exe"' = 2 ; Run fake installer to generate the uninstaller
!system 'SIGNTOOL sign /f ../../CodeSigningCertificate/SoundQISolutions.pfx /p Apple#Bl0ss0m! /tr http://timestamp.digicert.com /td SHA256 "$%TEMP%\Uninst.exe"' = 0 ; Change this line. As a demonstration, use !system 'echo Dummy >> "$%TEMP%\Uninst.exe"'
File "/oname=${Destination}" "$%TEMP%\Uninst.exe"
!macroend

!macro DeclareLanguages
!insertmacro MUI_LANGUAGE ${LANG_ENGLSH}
!macroend

!ifndef GENRATINGUNINST
Var HeadwaveInstallDir
Var HeadwaveSelectedInstallDir # In case there are multiple headwave installations
Var QiProInstallDir
Var FlexLmInstallDir
Var HwDataDir
Var HwWorkspaceDir
Var headwaveConfigDialog
Var headwaveConfigHwnd
Var headwaveConfigDataDirLabel
Var headwaveConfigDataDirText
Var headwaveConfigWkDirLabel
Var headwaveConfigWkDirText
;Var headwaveConfigProgramDirLabel
;Var headwaveConfigProgramDirText
Var userInfoDialog
Var userInfoHwnd

Function UserInfoPage
!insertmacro MUI_HEADER_TEXT "Required User Actions" "Perform the following custom steps after installation."

    nsDialogs::Create 1018
	Pop $userInfoDialog
 
	${NSD_CreateTextMultiline} 0 0 100% 60% "The Qi-Pro to Headwave connector uses network port 2004 by default. If this is a$\r$\nconflict on your system you can specify a new port by editing both the config.dat$\r$\nand QiProConfig.py files with a new port number.$\r$\n$\r$\nIn Headwave, update File/User preferences based on your selected locations:$\r$\n$\r$\nOutput directory = $HwDataDir$\r$\nCompute plugin directories = $HwDataDir\QI-Pro-Plugins\ComputePlugin$\r$\nExtension plugin directories = $HwDataDir\QI-Pro-Plugins\ExtensionPlugin"
		Pop $userInfoHwnd

	${NSD_CreateBitmap} 0 65% 100% 35% ""
	Pop $0
	File "/oname=HeadwaveQiProPlugins.bmp" "HeadwaveQiProPlugins.bmp"
	${NSD_SetImage} $0 "HeadwaveQiProPlugins.bmp" $1

	SetCtlColors $userInfoHwnd 0xFF0000 0xFFFFFF
        
	nsDialogs::Show
    ${NSD_FreeImage} $1
FunctionEnd
 
# Installer:
############
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE "QiProLicense.txt"

!define MUI_PAGE_CUSTOMFUNCTION_PRE SelectFilesCheck
!define MUI_PAGE_CUSTOMFUNCTION_LEAVE ComponentsLeave
!insertmacro MUI_PAGE_COMPONENTS

; ## This is the title on the Headwave Data Directory page
; !define MUI_DIRECTORYPAGE_TEXT_TOP "$(MUI_DIRECTORYPAGE_TEXT_TOP_HW)"
; !define MUI_PAGE_HEADER_TEXT "Headwave configuration"
; !define MUI_PAGE_HEADER_SUBTEXT "Select the folder which Headwave can use as a data storage."

; ; HW Data 
; !define MUI_PAGE_CUSTOMFUNCTION_PRE hw_data_pre
; !define MUI_PAGE_CUSTOMFUNCTION_SHOW hw_data_dir
; !define MUI_DIRECTORYPAGE_VARIABLE $HwDataDir
; !insertmacro MUI_PAGE_DIRECTORY

; ## This is the title on the Headwave Workspace Directory page
; !define MUI_DIRECTORYPAGE_TEXT_TOP "$(MUI_DIRECTORYPAGE_TEXT_TOP_HW_WK)"
; !define MUI_PAGE_HEADER_TEXT "Choose Headwave Workspace directory"
; !define MUI_PAGE_HEADER_SUBTEXT "Select the folder which Headwave can use as a workspace."

; # HW Workspaces
; !define MUI_PAGE_CUSTOMFUNCTION_PRE hw_wk_pre
; !define MUI_PAGE_CUSTOMFUNCTION_SHOW hw_wk_dir 
; !define MUI_DIRECTORYPAGE_VARIABLE $HwWorkspaceDir
; !insertmacro MUI_PAGE_DIRECTORY
; ;!insertmacro MUI_PAGE_INSTFILES    
 
## This is the title on the Headwave installation Directory page to obtain directory for %HEADWAVE_ROOT_DIR
!define MUI_DIRECTORYPAGE_TEXT_TOP "$(MUI_DIRECTORYPAGE_TEXT_TOP_HW_INST)"
!define MUI_PAGE_HEADER_TEXT "Choose Headwave Plugin installation directory"
!define MUI_PAGE_HEADER_SUBTEXT "Select the folder where Headwave is presently installed to set environment variable."
 
!define MUI_PAGE_CUSTOMFUNCTION_PRE SelectFilesHeadwaveProg
Page custom HeadwaveConfiguration HeadwaveConfigurationLeave
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES

## This is the title on the QI-Pro Directory page
!define MUI_DIRECTORYPAGE_TEXT_TOP "$(MUI_DIRECTORYPAGE_TEXT_TOP_A)"
!define MUI_PAGE_HEADER_TEXT "QI-Pro Configuration"
!define MUI_PAGE_HEADER_SUBTEXT "Select the folder in which to install QI-Pro."
 
!define MUI_PAGE_CUSTOMFUNCTION_PRE SelectFilesQIPro
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES

## This is the title on the FlexLM Directory page
!define MUI_DIRECTORYPAGE_TEXT_TOP "$(MUI_DIRECTORYPAGE_TEXT_TOP_B)"
!define MUI_PAGE_HEADER_TEXT "FlexLM Configuration"
!define MUI_PAGE_HEADER_SUBTEXT "Please choose the folder in which to install FlexLM."
 
!define MUI_PAGE_CUSTOMFUNCTION_PRE SelectFilesFlexLM
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
Page custom UserInfoPage 
!define MUI_PAGE_CUSTOMFUNCTION_LEAVE DeleteSectionsINI
!define MUI_FINISHPAGE_SHOWREADME "$QiProInstallDir\readme.txt"
!insertmacro MUI_PAGE_FINISH
!insertmacro MUI_UNPAGE_WELCOME
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH
!insertmacro DeclareLanguages

;--------------------------------

LangString NoSectionsSelected ${LANG_ENGLSH} "You haven't selected any sections!"

LangString MUI_DIRECTORYPAGE_TEXT_TOP_HW ${LANG_ENGLSH} "Select \
${HW_DATA} installation location..."
LangString MUI_DIRECTORYPAGE_TEXT_TOP_HW_WK ${LANG_ENGLSH} "Select \
${HW_WORKSPACE} installation location..."
LangString MUI_DIRECTORYPAGE_TEXT_TOP_HW_INST ${LANG_ENGLSH} "Select \
Headwave installation location..."
LangString MUI_DIRECTORYPAGE_TEXT_TOP_A ${LANG_ENGLSH} "Select \
${PRODUCT_NAME} installation location..."
LangString MUI_DIRECTORYPAGE_TEXT_TOP_B ${LANG_ENGLSH} "Select \
${FLEX_LM} installation location..."

;--------------------------------
; Settings
 
!define PROG1_InstDir    "$PROGRAMFILES64"
!define PROG1_StartIndex ${SEC1}
!define PROG1_EndIndex   ${SEC1}
 
!define PROG2_InstDir    "$PROGRAMFILES64\${PRODUCT_NAME} v${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}\"
!define PROG2_StartIndex ${SEC2}
!define PROG2_EndIndex   ${SEC2}
 
!define PROG3_InstDir "C:\${FLEX_DIR}"
!define PROG3_StartIndex ${SEC3}
!define PROG3_EndIndex   ${SEC3}

;--------------------------------
; Function
; StrContains
; This function does a case sensitive searches for an occurrence of a substring in a string. 
; It returns the substring if it is found. 
; Otherwise it returns null(""). 
; Written by kenglish_hi
; Adapted from StrReplace written by dandaman32
 
 
Var STR_HAYSTACK
Var STR_NEEDLE
Var STR_CONTAINS_VAR_1
Var STR_CONTAINS_VAR_2
Var STR_CONTAINS_VAR_3
Var STR_CONTAINS_VAR_4
Var STR_RETURN_VAR
 
Function StrContains
  Exch $STR_NEEDLE
  Exch 1
  Exch $STR_HAYSTACK
  ; Uncomment to debug
  ;MessageBox MB_OK 'STR_NEEDLE = $STR_NEEDLE STR_HAYSTACK = $STR_HAYSTACK '
    StrCpy $STR_RETURN_VAR ""
    StrCpy $STR_CONTAINS_VAR_1 -1
    StrLen $STR_CONTAINS_VAR_2 $STR_NEEDLE
    StrLen $STR_CONTAINS_VAR_4 $STR_HAYSTACK
    loop:
      IntOp $STR_CONTAINS_VAR_1 $STR_CONTAINS_VAR_1 + 1
      StrCpy $STR_CONTAINS_VAR_3 $STR_HAYSTACK $STR_CONTAINS_VAR_2 $STR_CONTAINS_VAR_1
      StrCmp $STR_CONTAINS_VAR_3 $STR_NEEDLE found
      StrCmp $STR_CONTAINS_VAR_1 $STR_CONTAINS_VAR_4 done
      Goto loop
    found:
      StrCpy $STR_RETURN_VAR $STR_NEEDLE
      Goto done
    done:
   Pop $STR_NEEDLE ;Prevent "invalid opcode" errors and keep the
   Exch $STR_RETURN_VAR  
FunctionEnd
 
!macro _StrContainsConstructor OUT NEEDLE HAYSTACK
  Push `${HAYSTACK}`
  Push `${NEEDLE}`
  Call StrContains
  Pop `${OUT}`
!macroend
 
!define StrContains '!insertmacro "_StrContainsConstructor"'

;--------------------------------
; Start sections

## Section 1
Section "Headwave Plugin" SEC1
  MessageBox MB_OK 'Headwave Plugin #1: INSTDIR = $INSTDIR'
    ${StrContains} $0 "Headwave" "$INSTDIR"	
    StrCmp $0 "" notfoundHeadwave
    Goto doneHeadwave
    doneHeadwave:
	  MessageBox MB_OK 'Headwave Plugin #2: HwDataDir = $HwDataDir'
      SetOutPath "$HwDataDir"
      ${StrContains} $0 "Data" "$HwDataDir"
      StrCmp $0 "" notfoundHwData
      Goto doneHwData
      ;MessageBox MB_OK 'Did not find QI string'
    doneHwData:
      ; Call HeadwaveConfigurationPre
      ##All the files in Group 0 will be installed to the same location, $HwDataDir
	  MessageBox MB_OK 'Headwave Plugin #3: HwDataDir = $HwDataDir'
      SetOutPath "$HwDataDir"
      CreateDirectory "$HwDataDir"
      CreateDirectory "$HwDataDir\QI-Pro-Plugins"
      CreateDirectory "$HwDataDir\QI-Pro-Plugins\ComputePlugin"
      CreateDirectory "$HwDataDir\QI-Pro-Plugins\ExtensionPlugin"                                       

      File /oname=$HwDataDir\QI-Pro-Plugins\ComputePlugin\computeplugin.xplot.dll computeplugin.xplot.dll
      File /oname=$HwDataDir\QI-Pro-Plugins\ComputePlugin\computeplugin.VirtualVolume.dll computeplugin.VirtualVolume.dll
      
      File /oname=$HwDataDir\QI-Pro-Plugins\ExtensionPlugin\hwProxyInterface.QIPro.dll hwProxyInterface.QIPro.dll

      # Headwave workspace
	  MessageBox MB_OK 'Headwave Plugin: HwWorkspaceDir = $HwWorkspaceDir'
      CreateDirectory "$HwWorkspaceDir"      
      
      ##All the files in Group 1 will be installed to the same location, $INSTDIR
      SetOutPath "$INSTDIR"
      messagebox mb_ok "Headwave Plugin: INSTDIR is $INSTDIR"
      
      # set environment variable for current user
      WriteRegExpandStr ${env_hkcu} HEADWAVE_ROOT_DIR $INSTDIR

      # save the selected headwave program directory
      StrCpy $HeadwaveSelectedInstallDir $INSTDIR
      
      # make sure windows knows about the change
      SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 "STR:Environment" /TIMEOUT=5000

      # Install Sound-QI python scripts
      CreateDirectory $INSTDIR\python\hwtoolkits\SoundQI
      File __init__.py
      File QiProConfig.py
      File QiProPlugin.py
      
      CopyFiles $INSTDIR\*.py $INSTDIR\python\hwtoolkits\SoundQI

      Delete $INSTDIR\__init__.py
      Delete $INSTDIR\QiProConfig.py
      Delete $INSTDIR\QiProPlugin.py
      Delete $INSTDIR\config.dat
      Delete $INSTDIR\QI-Pro.exe
      Delete $INSTDIR\readme.txt
      Delete $INSTDIR\readme.txt.old
      Delete $INSTDIR\ReleaseNotes.txt
      Delete $INSTDIR\Uninst.exe      
      
    notfoundHwData:          
    notfoundHeadwave:
      ; Do nothing
SectionEnd

## Sections 2
Section "QI-Pro" SEC2
  ${If} ${SectionIsSelected} ${SEC2}
    ${StrContains} $0 "Headwave" "$INSTDIR"
    StrCmp $0 "" notfoundHeadwave
    Goto doneHeadwave
  notfoundHeadwave:
    ${StrContains} $0 "Pro" "$INSTDIR"
    StrCmp $0 "" notfoundQI
    StrCpy $QiProInstallDir "$INSTDIR"
    Goto doneQI
      ;MessageBox MB_OK 'Did not find QI string'

  doneQI:	      
      
  ##All the files in Group 2 will be installed to the same location, $INSTDIR
  SetOutPath "$INSTDIR"
  
  !insertmacro WriteSignedUninstaller "$InstDir\Uninst.exe"

  # specify files to go in output path
  File QI-Pro.exe
  File readme.txt  
  File ReleaseNotes.txt        
  CreateDirectory $INSTDIR\ColorBarTemplates 
  File Baha.txt    
  CopyFiles Baha.txt $INSTDIR\ColorBarTemplates\Baha.txt
  File BlueRed.txt
  CopyFiles BlueRed.txt $INSTDIR\ColorBarTemplates\BlueRed.txt
  File Bone.txt
  CopyFiles Bone.txt $INSTDIR\ColorBarTemplates\Bone.txt
  File CubeContrast.txt
  CopyFiles CubeContrast.txt $INSTDIR\ColorBarTemplates\CubeContrast.txt
  File CubeYF.txt
  CopyFiles CubeYF.txt $INSTDIR\ColorBarTemplates\CubeYF.txt
  File Greyscale.txt
  CopyFiles Greyscale.txt $INSTDIR\ColorBarTemplates\Greyscale.txt
  File IESX.txt
  CopyFiles IESX.txt $INSTDIR\ColorBarTemplates\IESX.txt
  File Jet.txt
  CopyFiles Jet.txt $INSTDIR\ColorBarTemplates\Jet.txt
  File LinearLightness.txt
  CopyFiles LinearLightness.txt $INSTDIR\ColorBarTemplates\LinearLightness.txt
  File Lithology.txt
  CopyFiles Lithology.txt $INSTDIR\ColorBarTemplates\Lithology.txt
  File Magma.txt
  CopyFiles Magma.txt $INSTDIR\ColorBarTemplates\Magma.txt    
  File Parula.txt
  CopyFiles Parula.txt $INSTDIR\ColorBarTemplates\Parula.txt
  File Rainbow.txt
  CopyFiles Rainbow.txt $INSTDIR\ColorBarTemplates\Rainbow.txt    
  File Spectral.txt
  CopyFiles Spectral.txt $INSTDIR\ColorBarTemplates\Spectral.txt

  Delete Baha.txt
  Delete BlueRed.txt
  Delete Bone.txt
  Delete CubeContrast.txt      
  Delete CubeYF.txt
  Delete Greyscale.txt      
  Delete IESX.txt
  Delete Jet.txt      
  Delete LinearLightness.txt
  Delete Lithology.txt      
  Delete Magma.txt
  Delete Parula.txt
  Delete Rainbow.txt
  Delete Spectral.txt      
	
  # FlexLM libs 
  Delete $INSTDIR\SQI.exe
  Delete $INSTDIR\flexSQI.log
  Delete $INSTDIR\installs.exe
  Delete $INSTDIR\lmborrow.exe
  Delete $INSTDIR\lmdiag.exe
  Delete $INSTDIR\lmdown.exe
  Delete $INSTDIR\lmflex.exe
  Delete $INSTDIR\lmgrd.exe
  Delete $INSTDIR\lmhostid.exe
  Delete $INSTDIR\lmpath.exe
  Delete $INSTDIR\lmremove.exe
  Delete $INSTDIR\lmreread.exe
  Delete $INSTDIR\lmstat.exe
  Delete $INSTDIR\lmtools.exe
  Delete $INSTDIR\lmutil.exe
  Delete $INSTDIR\lmver.exe	
	
  # Setup AppData files 
  CreateDirectory "$APPDATA\${COMPANY_NAME}"
  CreateDirectory "$APPDATA\${COMPANY_NAME}\${PRODUCT_NAME}"
  CreateDirectory "$APPDATA\${COMPANY_NAME}\${PRODUCT_NAME}\ColorBarTemplates"
  ; SetOutPath "$APPDATA\"${COMPANY_NAME}"\${PRODUCT_NAME}\ColorBarTemplates"

  # Create config.dat based on user`s previous selection
  IfFileExists "$INSTDIR\config.dat" file_found file_not_found
  file_found:
    goto end_of_test ;<== important for not continuing on the else branch
  file_not_found:
    nsExec::ExecToStack 'cmd /c "@echo ServerPort = 2003 > config.dat"'
    Pop $0 # return value/error/timeout
    Pop $1 # printed text, up to ${NSIS_MAX_STRLEN}
    DetailPrint 'cmd /c "@echo ServerPort = 2003 > config.dat" printed: $1'
    DetailPrint ""
    DetailPrint "       Return value: $0"
    DetailPrint ""
    nsExec::ExecToStack 'cmd /c "@echo HeadwavePort = 2004 >> config.dat"'
    nsExec::ExecToStack 'cmd /c "@echo HeadwaveOutputDirectory = $HwDataDir >> config.dat"'
	
	# 2 	
	; messagebox mb_ok "QI-Pro Main: HW Data Dir $HwDataDir"
    nsExec::ExecToStack 'cmd /c "@echo HeadwaveWorkspaceDirectory = $HwWorkspaceDir >> config.dat"'
	
	# 3	
	; messagebox mb_ok "QI-Pro Main: HW Workspace Dir $HwWorkspaceDir"
  end_of_test:

  CopyFiles config.dat "$APPDATA\${COMPANY_NAME}\${PRODUCT_NAME}\config.dat"

  # create a shortcut named "new shortcut" in the start menu programs directory
  CreateShortcut "$SMPROGRAMS\${PRODUCT_NAME}.lnk" "$InstDir\${PRODUCT_NAME}.exe" 
  
  # Update readme.txt with config.dat values 
  !insertmacro _ReplaceInFile "readme.txt" "HEADWAVE_ROOT_DIR C:\Program Files\Headwave 10.4.2" "HEADWAVE_ROOT_DIR $HeadwaveSelectedInstallDir"
  !insertmacro _ReplaceInFile "readme.txt" "C:\HW-Data" "$HwDataDir"
  !insertmacro _ReplaceInFile "readme.txt" "C:\HW-Workspaces" "$HwWorkspaceDir"    

  # Add application to registry  
  ClearErrors
	WriteRegStr HKCU "SOFTWARE\${COMPANY_NAME}" 'Contact' "https://www.sound-qi.com/contact"
    WriteRegStr HKCU "SOFTWARE\${COMPANY_NAME}" 'Company Name' "${COMPANY_NAME}"
	WriteRegStr HKCU "SOFTWARE\${COMPANY_NAME}" 'DisplayName' "${PRODUCT_NAME}"
    WriteRegStr HKCU "SOFTWARE\${COMPANY_NAME}" 'DisplayVersion' "${PRODUCT_VERSION}"
    WriteRegStr HKCU "SOFTWARE\${COMPANY_NAME}" 'AppID' "{A0E84732-E2B2-46E5-8CA2-462B8DF92DCD}"
	WriteRegStr HKCU "SOFTWARE\${COMPANY_NAME}" 'HelpLink' "http://www.qi-pro.com/QI-Pro/HelpDocs/index.htm"
	WriteRegStr HKCU "SOFTWARE\${COMPANY_NAME}" 'URLInfoAbout' "https://www.sound-qi.com/qi-pro"
	WriteRegStr HKCU "SOFTWARE\${COMPANY_NAME}" 'InstallLocation' "$QiProInstallDir"	
	WriteRegStr HKCU "SOFTWARE\${COMPANY_NAME}" 'Publisher' "${COMPANY_NAME}"
 
  # Add program to Add/Remove programs 
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" \
                 "DisplayIcon" "$PROGRAMFILES64\${PRODUCT_NAME} v${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}\${PRODUCT_NAME}.exe"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" \
                 "AppID" "{A0E84732-E2B2-46E5-8CA2-462B8DF92DCD}"				                  
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" \
                 "DisplayName" "${PRODUCT_NAME}"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" \
                 "DisplayVersion" "${PRODUCT_VERSION}"				 
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" \
                 "InstallLocation" "$INSTDIR"						 
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" \
                 "Publisher" "${COMPANY_NAME}"				 
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" \
                     "UninstallString" "$\"$INSTDIR\Uninst.exe$\"" 

  # FlexLM libs 
  Delete $INSTDIR\SQI.exe
  Delete $INSTDIR\flexSQI.log
  Delete $INSTDIR\installs.exe
  Delete $INSTDIR\lmborrow.exe
  Delete $INSTDIR\lmdiag.exe
  Delete $INSTDIR\lmdown.exe
  Delete $INSTDIR\lmflex.exe
  Delete $INSTDIR\lmgrd.exe
  Delete $INSTDIR\lmhostid.exe
  Delete $INSTDIR\lmpath.exe
  Delete $INSTDIR\lmremove.exe
  Delete $INSTDIR\lmreread.exe
  Delete $INSTDIR\lmstat.exe
  Delete $INSTDIR\lmtools.exe
  Delete $INSTDIR\lmutil.exe
  Delete $INSTDIR\lmver.exe
  
  # Keep config.dat in $APPDATA for all versions of QI-Pro to access
  Delete $INSTDIR\config.dat  

  ; MessageBox MB_OK "SEC2 #3 INSTDIR is $INSTDIR"  
  StrCmp "$INSTDIR" "$PROGRAMFILES64\${PRODUCT_NAME}" 0 jump_to_if_not_equal
    goto end
  jump_to_if_not_equal:
    Delete $PROGRAMFILES64\${PRODUCT_NAME}\config.dat
    Delete $PROGRAMFILES64\${PRODUCT_NAME}\QI-Pro.exe
    Delete $PROGRAMFILES64\${PRODUCT_NAME}\readme.txt
	Delete $PROGRAMFILES64\${PRODUCT_NAME}\readme.txt.old
    Delete $PROGRAMFILES64\${PRODUCT_NAME}\ReleaseNotes.txt
    Delete $PROGRAMFILES64\${PRODUCT_NAME}\Uninst.exe
    RMDir $PROGRAMFILES64\${PRODUCT_NAME}
  end:
  notfoundQI:
  doneHeadwave:  

  # messagebox mb_ok SEC2
  ${Else}
    Abort      
  ${EndIf}	            
SectionEnd

## Section 3
Section /o "FlexLM" SEC3
	${StrContains} $0 "Pro" "$INSTDIR"
    StrCmp $0 "" notfoundQI
      StrCpy $QiProInstallDir "$INSTDIR"
      Goto doneQI
	notfoundQI:
      ;MessageBox MB_OK 'Did not find QI string'

	${StrContains} $0 "Flex" "$INSTDIR"
    StrCmp $0 "" notfoundFlex
      StrCpy $FlexLmInstallDir "$INSTDIR"
      Goto doneFlex
    notfoundFlex:
    ; Do nothing 
	doneFlex:	  
 
  ##All the files in Group 2 will be installed to the same location, $INSTDIR
  SetOutPath "$INSTDIR"
    
	# Add application to registry 
	WriteRegStr HKCU "SOFTWARE\${FLEX_LM}" 'DisplayName' "${FLEX_LM}"
	WriteRegStr HKCU "SOFTWARE\${FLEX_LM}" 'InstallLocation' "$FlexLmInstallDir"    

    # Files 
  File SQI.exe
  File flexSQI.log
  File installs.exe
  File lmborrow.exe
  File lmdiag.exe
  File lmdown.exe
  File lmflex.exe
  File lmgrd.exe
  File lmhostid.exe
  File lmpath.exe
  File lmremove.exe
  File lmreread.exe
  File lmstat.exe
  File lmtools.exe
  File lmutil.exe
  File lmver.exe

	doneQI:	  

SectionEnd
 
;--------------------------------
;Descriptions

  ;Language strings
  LangString DESC_SecQiPro ${LANG_ENGLISH} "QI-ProTM software is an easy-to-use suite of tools for interactively generating reservoir realizations that are jointly calibrated to all available seismic, petrophysical and production knowledge."
  LangString DESC_SecFlexLM ${LANG_ENGLISH} "FlexSQI contains all the files necessary to implement the FlexLM license server."
  LangString DESC_SecHeadWave ${LANG_ENGLISH} "Headwave removes the limitations created by seismic data size to enable full visualization, interactivity, and computation delivering value across the E&P workflow to reduce uncertainty and accelerate time to first oil."

  ;Assign language strings to sections
  !insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC1} $(DESC_SecHeadWave)      
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC2} $(DESC_SecQiPro)
    !insertmacro MUI_DESCRIPTION_TEXT ${SEC3} $(DESC_SecFlexLM)
  !insertmacro MUI_FUNCTION_DESCRIPTION_END

;--------------------------------
; Please don`t modify below here unless you`re a NSIS 'wiz-kid'
 
## Create $PLUGINSDIR
Function .onInit
  InitPluginsDir

  SetOutPath $TEMP
  File /oname=spltmp.bmp "Sound_QI_LandingPage_114.bmp"

  splash::show 2000 $TEMP\spltmp

  Pop $0 ; $0 has '1' if the user closed the splash screen early,
  ; '0' if everything closed normally, and '-1' if some error occurred.

  Delete $TEMP\spltmp.bmp  

  ; Initialize variables
  StrCpy $HeadwaveInstallDir ""
FunctionEnd

Function .onInstSuccess
	Delete $INSTDIR\__init__.py
    Delete $INSTDIR\QiProConfig.py
    Delete $INSTDIR\QiProPlugin.py
FunctionEnd

## If user goes back to this page from 1st Directory page
## we need to put the sections back to how they were before
Var IfBack
Function SelectFilesCheck
 StrCmp $IfBack 1 0 NoCheck
  Call ResetFiles
 NoCheck:
FunctionEnd
 
Function HeadwaveConfiguration
  !insertmacro MUI_HEADER_TEXT "Headwave configuration" "Select the respective folders for Headwave."
  nsDialogs::Create 1018
  Pop $headwaveConfigDialog

  ${NSD_CreateLabel} 0 0 100% 12u "Select the folder which Headwave can use as a data storage:"
  Pop $headwaveConfigDataDirLabel
       
  ${NSD_CreateText} 10% 20u 80% 12u "C:\HW-Data"
  Pop $headwaveConfigDataDirText
  
  ${NSD_CreateLabel} 0 40u 80% 12u "Select the folder which Headwave can use as a workspace:"
  Pop $headwaveConfigWkDirLabel

  ${NSD_CreateText} 10% 60u 80% 12u "C:\HW-Workspaces"
  Pop $headwaveConfigWkDirText   

  ;${NSD_CreateLabel} 0 80u 80% 12u "Select the folder where Headwave is installed:"
  ;Pop $headwaveConfigProgramDirLabel

  ;StrCpy $headwaveConfigProgramDirText $HeadwaveInstallDir
  ;${NSD_CreateText} 10% 100u 80% 12u $HeadwaveInstallDir
  ;Pop $headwaveConfigProgramDirText

  SetCtlColors $headwaveConfigHwnd 0xFF0000 0xFFFFFF
  
  nsDialogs::Show        
FunctionEnd
 
Function HeadwaveConfigurationLeave
    ${NSD_GetText} $headwaveConfigDataDirText $0
    ;MessageBox MB_OK "HeadwaveConfigurationLeave headwaveConfigDataDirText = $\n$\n$0"
    ;StrCpy $HwDataDir $headwaveConfigDataDirText   
    MessageBox MB_OK "HeadwaveConfigurationLeave HwDataDir = $\n$\n$0"
    ${NSD_GetText} $headwaveConfigWkDirText $0
    ;MessageBox MB_OK "HeadwaveConfigurationLeave headwaveConfigWkDirText = $\n$\n$0"
    ;StrCpy $HwWorkspaceDir $headwaveConfigWkDirText  
    MessageBox MB_OK "HeadwaveConfigurationLeave HwWorkspaceDir = $\n$\n$0"
FunctionEnd
 
## Here we are selecting first sections to install
## by unselecting all the others!
Function SelectFilesHeadwaveProg
  ${If} ${SectionIsSelected} ${SEC1}
	;MessageBox MB_OK "SEC2 #1 INSTDIR is $INSTDIR"
  ${Else}  
	  Abort
  ${EndIf}  
  
 # If user clicks Back now, we will know to reselect Group 2`s sections for
 # Components page
 StrCpy $IfBack 1
 
 # We need to save the state of the Group 1 Sections
 # for the next InstFiles page
Push $R0
Push $R1
 
 StrCpy $R0 ${PROG1_StartIndex} # Group 1 start
 
 # Don`t install prog 1?
 Call IsPROG1Selected
 Pop $R0
 StrCmp $R0 1 +4
  Pop $R1
  Pop $R0
  Abort

  ${If} $HeadwaveInstallDir == ""
    StrCpy $0 0
	loop:
      EnumRegKey $1 HKCU "SOFTWARE\Bluware" $0
      StrCmp $1 "" done
      IntOp $0 $0 + 1
      StrCpy $INSTDIR "$PROGRAMFILES64\$1"
      SetOutPath "$INSTDIR"            
      StrCpy $HeadwaveInstallDir $PROGRAMFILES64\$1
	  Goto loop
    done: 
    ; messagebox mb_ok "HeadwaveInstallDir is $HeadwaveInstallDir"

    StrCpy $INSTDIR $HeadwaveInstallDir
    SetOutPath $INSTDIR
  ${Else}  
	  Abort
  ${EndIf}

 # Set current $INSTDIR to PROG1_InstDir define
 StrCpy $INSTDIR $HeadwaveInstallDir
 MessageBox MB_OK 'SelectFilesHeadwaveProg: HeadwaveInstallDir = $HeadwaveInstallDir' 
 
Pop $R1
Pop $R0
FunctionEnd 

Function SelectFilesQIPro
  ${If} ${SectionIsSelected} ${SEC2}
    StrCpy $INSTDIR "${PROG2_InstDir}"
  ${Else}  
	  Abort
  ${EndIf}
FunctionEnd
 
## Here we need to unselect all Group 1 sections
## and then re-select those in Group 2 (that the user had selected on
## Components page)
Function SelectFilesFlexLM
  ${If} ${SectionIsSelected} ${SEC3}
    StrCpy $INSTDIR "${PROG3_InstDir}"
  ${Else}  
	  Abort
  ${EndIf} 
FunctionEnd
 
## Also if no sections are selected, warn the user!
Function ComponentsLeave
Push $R0
Push $R1
Push $R2
 
 Call IsPROG1Selected
  Pop $R0
 Call IsPROG2Selected
  Pop $R1  
 Call IsPROG3Selected
  Pop $R2
 StrCmp $R0 1 End
 StrCmp $R1 1 End
 StrCmp $R2 1 End
  Pop $R2
  Pop $R1
  Pop $R0
 MessageBox MB_OK|MB_ICONEXCLAMATION "$(NoSectionsSelected)"
 Abort
 
End:
Pop $R1
Pop $R0
FunctionEnd   
   
Function IsPROG1Selected
Push $R0
 
 StrCpy $R0 ${PROG1_StartIndex} # Group Headwave Program start
 
   SectionGetFlags 0 $R0 			# Get section flags
    IntOp $R0 $R0 & ${SF_SELECTED}
    StrCmp $R0 ${SF_SELECTED} 0 +3		# If section is selected, done
     StrCpy $R0 1
 
Exch $R0
FunctionEnd   
   
Function IsPROG2Selected
Push $R0
 
 StrCpy $R0 ${PROG2_StartIndex} # Group QI-Pro start
 
   SectionGetFlags 0 $R0 			# Get section flags
    IntOp $R0 $R0 & ${SF_SELECTED}
    StrCmp $R0 ${SF_SELECTED} 0 +3		# If section is selected, done
     StrCpy $R0 1
 
Exch $R0
FunctionEnd
 
Function IsPROG3Selected
Push $R0
 
 StrCpy $R0 ${PROG3_StartIndex}    # Group FlexLM start
 
   IntOp $R0 $R0 + 1
   SectionGetFlags $R0 $R0 			# Get section flags
    IntOp $R0 $R0 & ${SF_SELECTED}
    StrCmp $R0 ${SF_SELECTED} 0 +3		# If section is selected, done
     StrCpy $R0 1
 
Exch $R0
FunctionEnd

## This will set all sections to how they were on the components page
## originally
Function ResetFiles
Push $R0
Push $R1
 
 StrCpy $R0 ${PROG3_StartIndex}    # Group 2 start
 
  Loop:
   IntOp $R0 $R0 + 1
   ReadINIStr "$R1" "$PLUGINSDIR\sections.ini" Sections $R0 # Get sec flags
    SectionSetFlags $R0 $R1				  # Re-set flags for this sec
    StrCmp $R0 ${PROG3_EndIndex} 0 Loop
 
Pop $R1
Pop $R0
FunctionEnd
 
## Here we are deleting the temp INI file at the end of installation
Function DeleteSectionsINI
 FlushINI "$PLUGINSDIR\Sections.ini"
 Delete "$PLUGINSDIR\Sections.ini"
 Delete $INSTDIR\Sound_QI_LandingPage_114.bmp
 Delete $INSTDIR\HeadwaveQiProPlugins.bmp
FunctionEnd

!else
# Uninstaller:
##############
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro DeclareLanguages

!verbose push 2
SilentInstall Silent
Section
WriteUninstaller "${GENRATINGUNINST}"
Quit
SectionEnd
!verbose pop

Section -Uninstall
  # now delete installed files and registry keys for QI-Pro
  ReadRegStr $0 HKCU "SOFTWARE\${COMPANY_NAME}" "InstallLocation"
  Delete $0\config.dat
  Delete $0\QI-Pro.exe
  Delete $0\readme.txt
  Delete $0\readme.txt.old
  Delete $0\ReleaseNotes.txt
  Delete $0\ColorBarTemplates\Baha.txt
  Delete $0\ColorBarTemplates\BlueRed.txt
  Delete $0\ColorBarTemplates\Bone.txt
  Delete $0\ColorBarTemplates\CubeContrast.txt      
  Delete $0\ColorBarTemplates\CubeYF.txt
  Delete $0\ColorBarTemplates\Greyscale.txt      
  Delete $0\ColorBarTemplates\IESX.txt
  Delete $0\ColorBarTemplates\Jet.txt      
  Delete $0\ColorBarTemplates\LinearLightness.txt
  Delete $0\ColorBarTemplates\Lithology.txt      
  Delete $0\ColorBarTemplates\Magma.txt
  Delete $0\ColorBarTemplates\Parula.txt
  Delete $0\ColorBarTemplates\\Rainbow.txt
  Delete $0\ColorBarTemplates\Spectral.txt      
  RMDir $0\ColorBarTemplates   
  Delete $0\Sound_QI_LandingPage_114.bmp
  Delete $0\QiProLicense.txt
  Delete $0\HeadwaveQiProPlugins.bmp
  Delete "$SMPROGRAMS\QI-Pro.lnk"
  DeleteRegKey HKCU "SOFTWARE\${COMPANY_NAME}"
  DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
  DeleteRegKey /ifempty HKCU "Software\Modern UI Test" 

  # Delete Seisware libs
  Delete $0\libzmq-mt-4_3_0.dll
  Delete $0\seisware.dll
  Delete $0\vcruntime140_1.dll   

  # Final cleanup 
  Delete "$InstDir\Uninst.exe"
  RMDir "$InstDir"
SectionEnd

!endif

